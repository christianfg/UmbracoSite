@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";

    var memberService = ApplicationContext.Current.Services.MemberService;
    var members = memberService.GetMembersByGroup("Active");
}
@using Newtonsoft.Json;
@using Umbraco.Web.Models;

<div class="container">
    <div class="row">
        <h2>All active members</h2>
        <div class="col-lg-12">
            <div class="main-box no-header clearfix">
                <div class="main-box-body clearfix">
                    <div class="table-responsive">
                        <table class="table user-list">
                            <thead>
                                <tr>
                                    <th><span>Username</span></th>
                                    <th><span>Skills</span></th>
                                    <th class="text-center"><span>Status</span></th>
                                    <th><span>City</span></th>
                                    <th>&nbsp;</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var member in members)
                                {

                                    <tr>
                                        <td>
                                            @if (member.GetValue("photo") != null)
                                            {
                                                string image = member.GetValue<string>("photo");
                                                if (image != null)
                                                {
                                                    var imageCrop = JsonConvert.DeserializeObject<ImageCropDataSet>(image);
                                                    var imagePath = imageCrop.Src.GetCropUrl(width: 100);
                                                    <img src="@imagePath " />
                                                }
                                            }
                                            <a href="#" class="user-link">@member.Name</a>
                                        </td>
                                        <td>
                                            @{
                                                String[] skills = member.GetValue("skills").ToString().Split(',');
                                                string skillString =
                                                string.Join(", ", from skill in skills

                                                                  select umbraco.library.GetPreValueAsString(Convert.ToInt32(skill)));


                                                <span>@skillString</span>

                                            }
                                        </td>
                                        <td class="text-center">
                                            <span class="label label-success">Active user</span>
                                        </td>
                                        <td>
                                            @member.GetValue("zip") @member.GetValue("city")
                                        </td>
                                        <td style="width: 20%;">
                                            <a href="#" class="table-link">
                                                <span class="fa-stack">
                                                    <i class="fa fa-square fa-stack-2x"></i>
                                                    <i class="fa fa-info fa-stack-1x fa-inverse"></i>
                                                </span>
                                            </a>
                                            <a href="#" class="table-link danger">
                                                <span class="fa-stack">
                                                    <i class="fa fa-square fa-stack-2x"></i>
                                                    <i class="fa fa-envelope fa-stack-1x fa-inverse"></i>
                                                </span>
                                            </a>
                                        </td>
                                    </tr>
                              }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
